{
  "contractName": "RakTokenFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rakToken",
      "outputs": [
        {
          "internalType": "contract RakToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyRaktoken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyRaktoken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rakToken\",\"outputs\":[{\"internalType\":\"contract RakToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyRaktoken(uint256)\":{\"params\":{\"amount\":\"number of token user wants\"},\"returns\":{\"success\":\"true if success\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyRaktoken(uint256)\":{\"notice\":\"user can get Rak token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/RakTokenFactory.sol\":\"RakTokenFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/RakToken.sol\":{\"keccak256\":\"0xc2badeb1bb971781ce4671fade577d14898161e8641a45b709d086cd2a1424c1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ea973c956d5712f5caa8a5fc9b80df58841d54104a8c6b55a86df7c5e8221e00\",\"dweb:/ipfs/QmYXqyeB2qa7qTuDgwhG3m7bqCEC6woUSDY2vAfKtVy1PJ\"]},\"project:/contracts/RakTokenFactory.sol\":{\"keccak256\":\"0xbd412de00a140024e631f4d1ff6763c6e91e178ca78b339eaf7918fa9a6b87b9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29718bdac1c4049ec14856d7bbf6e1eda4e878af0e7cf1db39d2e9dd90039757\",\"dweb:/ipfs/QmSH6gnfHGN2dr6ULJRNTdNK7tiMb1MNigCA7pStct8iKs\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
  "bytecode": "0x60806040526305f5e10060405161001590610176565b61001f91906101d2565b604051809103906000f08015801561003b573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561008857600080fd5b506100a561009a6100aa60201b60201c565b6100b260201b60201c565b6101ed565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61218080610a6083390190565b6000819050919050565b6000819050919050565b6000819050919050565b60006101bc6101b76101b284610183565b610197565b61018d565b9050919050565b6101cc816101a1565b82525050565b60006020820190506101e760008301846101c3565b92915050565b610864806101fc6000396000f3fe60806040526004361061004a5760003560e01c8063715018a61461004f5780638da5cb5b14610066578063d857d23914610091578063e75cb9ae146100bc578063f2fde38b146100ec575b600080fd5b34801561005b57600080fd5b50610064610115565b005b34801561007257600080fd5b5061007b61019d565b6040516100889190610519565b60405180910390f35b34801561009d57600080fd5b506100a66101c6565b6040516100b39190610593565b60405180910390f35b6100d660048036038101906100d191906105e9565b6101ec565b6040516100e39190610631565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e9190610678565b610314565b005b61011d61040c565b73ffffffffffffffffffffffffffffffffffffffff1661013b61019d565b73ffffffffffffffffffffffffffffffffffffffff1614610191576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018890610702565b60405180910390fd5b61019b6000610414565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006101f661040c565b73ffffffffffffffffffffffffffffffffffffffff1661021461019d565b73ffffffffffffffffffffffffffffffffffffffff161461026a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026190610702565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d7cce633846040518363ffffffff1660e01b81526004016102c7929190610731565b6020604051808303816000875af11580156102e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030a919061076f565b5060019050919050565b61031c61040c565b73ffffffffffffffffffffffffffffffffffffffff1661033a61019d565b73ffffffffffffffffffffffffffffffffffffffff1614610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790610702565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f79061080e565b60405180910390fd5b61040981610414565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610503826104d8565b9050919050565b610513816104f8565b82525050565b600060208201905061052e600083018461050a565b92915050565b6000819050919050565b600061055961055461054f846104d8565b610534565b6104d8565b9050919050565b600061056b8261053e565b9050919050565b600061057d82610560565b9050919050565b61058d81610572565b82525050565b60006020820190506105a86000830184610584565b92915050565b600080fd5b6000819050919050565b6105c6816105b3565b81146105d157600080fd5b50565b6000813590506105e3816105bd565b92915050565b6000602082840312156105ff576105fe6105ae565b5b600061060d848285016105d4565b91505092915050565b60008115159050919050565b61062b81610616565b82525050565b60006020820190506106466000830184610622565b92915050565b610655816104f8565b811461066057600080fd5b50565b6000813590506106728161064c565b92915050565b60006020828403121561068e5761068d6105ae565b5b600061069c84828501610663565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006106ec6020836106a5565b91506106f7826106b6565b602082019050919050565b6000602082019050818103600083015261071b816106df565b9050919050565b61072b816105b3565b82525050565b6000604082019050610746600083018561050a565b6107536020830184610722565b9392505050565b600081519050610769816105bd565b92915050565b600060208284031215610785576107846105ae565b5b60006107938482850161075a565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006107f86026836106a5565b91506108038261079c565b604082019050919050565b60006020820190508181036000830152610827816107eb565b905091905056fea2646970667358221220ed027205cfb78fada5c78b43c26ce7d4756575f566616d89b5441ef9ba4b4a7864736f6c634300080a003360806040523480156200001157600080fd5b506040516200218038038062002180833981810160405281019062000037919062000490565b6040518060400160405280600981526020017f52414b20546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f52414b00000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620003a0565b508060049080519060200190620000d4929190620003a0565b505050620000f7620000eb6200013760201b60201c565b6200013f60201b60201c565b60006200011b678ac7230489e80000836200020560201b62000ac61790919060201c565b90506200012f33826200021d60201b60201c565b5050620006c5565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183620002159190620004f1565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000290576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028790620005b3565b60405180910390fd5b620002a4600083836200039660201b60201c565b8060026000828254620002b89190620005d5565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200030f9190620005d5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000376919062000643565b60405180910390a362000392600083836200039b60201b60201c565b5050565b505050565b505050565b828054620003ae906200068f565b90600052602060002090601f016020900481019282620003d257600085556200041e565b82601f10620003ed57805160ff19168380011785556200041e565b828001600101855582156200041e579182015b828111156200041d57825182559160200191906001019062000400565b5b5090506200042d919062000431565b5090565b5b808211156200044c57600081600090555060010162000432565b5090565b600080fd5b6000819050919050565b6200046a8162000455565b81146200047657600080fd5b50565b6000815190506200048a816200045f565b92915050565b600060208284031215620004a957620004a862000450565b5b6000620004b98482850162000479565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620004fe8262000455565b91506200050b8362000455565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620005475762000546620004c2565b5b828202905092915050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006200059b601f8362000552565b9150620005a88262000563565b602082019050919050565b60006020820190508181036000830152620005ce816200058c565b9050919050565b6000620005e28262000455565b9150620005ef8362000455565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620006275762000626620004c2565b5b828201905092915050565b6200063d8162000455565b82525050565b60006020820190506200065a600083018462000632565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620006a857607f821691505b60208210811415620006bf57620006be62000660565b5b50919050565b611aab80620006d56000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d71461028a578063a9059cbb146102ba578063dd62ed3e146102ea578063f2fde38b1461031a576100f5565b806370a0823114610214578063715018a6146102445780638da5cb5b1461024e57806395d89b411461026c576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806343d7cce6146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610336565b60405161010f9190611177565b60405180910390f35b610132600480360381019061012d9190611232565b6103c8565b60405161013f919061128d565b60405180910390f35b6101506103eb565b60405161015d91906112b7565b60405180910390f35b610180600480360381019061017b91906112d2565b6103f5565b60405161018d919061128d565b60405180910390f35b61019e6104ec565b6040516101ab9190611341565b60405180910390f35b6101ce60048036038101906101c99190611232565b6104f5565b6040516101db919061128d565b60405180910390f35b6101fe60048036038101906101f99190611232565b61059f565b60405161020b91906112b7565b60405180910390f35b61022e6004803603810190610229919061135c565b6105dc565b60405161023b91906112b7565b60405180910390f35b61024c610624565b005b6102566106ac565b6040516102639190611398565b60405180910390f35b6102746106d6565b6040516102819190611177565b60405180910390f35b6102a4600480360381019061029f9190611232565b610768565b6040516102b1919061128d565b60405180910390f35b6102d460048036038101906102cf9190611232565b610852565b6040516102e1919061128d565b60405180910390f35b61030460048036038101906102ff91906113b3565b610947565b60405161031191906112b7565b60405180910390f35b610334600480360381019061032f919061135c565b6109ce565b005b60606003805461034590611422565b80601f016020809104026020016040519081016040528092919081815260200182805461037190611422565b80156103be5780601f10610393576101008083540402835291602001916103be565b820191906000526020600020905b8154815290600101906020018083116103a157829003601f168201915b5050505050905090565b6000806103d3610adc565b90506103e0818585610ae4565b600191505092915050565b6000600254905090565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f906114a0565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ce906114a0565b60405180910390fd5b6104e2858585610caf565b9150509392505050565b60006012905090565b600080610500610adc565b9050610594818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461058f91906114ef565b610ae4565b600191505092915050565b6000806105bd678ac7230489e8000084610ac690919063ffffffff16565b90506105c98482610852565b506105d3336105dc565b91505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61062c610adc565b73ffffffffffffffffffffffffffffffffffffffff1661064a6106ac565b73ffffffffffffffffffffffffffffffffffffffff16146106a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069790611591565b60405180910390fd5b6106aa6000610cde565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546106e590611422565b80601f016020809104026020016040519081016040528092919081815260200182805461071190611422565b801561075e5780601f106107335761010080835404028352916020019161075e565b820191906000526020600020905b81548152906001019060200180831161074157829003601f168201915b5050505050905090565b600080610773610adc565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083090611623565b60405180910390fd5b6108468286868403610ae4565b60019250505092915050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bc906114a0565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610934576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092b906114a0565b60405180910390fd5b61093e8484610da4565b91505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6109d6610adc565b73ffffffffffffffffffffffffffffffffffffffff166109f46106ac565b73ffffffffffffffffffffffffffffffffffffffff1614610a4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4190611591565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610aba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab1906116b5565b60405180910390fd5b610ac381610cde565b50565b60008183610ad491906116d5565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4b906117a1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbb90611833565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ca291906112b7565b60405180910390a3505050565b600080610cba610adc565b9050610cc7858285610dc7565b610cd2858585610e53565b60019150509392505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080610daf610adc565b9050610dbc818585610e53565b600191505092915050565b6000610dd38484610947565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e4d5781811015610e3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e369061189f565b60405180910390fd5b610e4c8484848403610ae4565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ec3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eba90611931565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2a906119c3565b60405180910390fd5b610f3e8383836110d4565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610fc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbb90611a55565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461105791906114ef565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bb91906112b7565b60405180910390a36110ce8484846110d9565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111185780820151818401526020810190506110fd565b83811115611127576000848401525b50505050565b6000601f19601f8301169050919050565b6000611149826110de565b61115381856110e9565b93506111638185602086016110fa565b61116c8161112d565b840191505092915050565b60006020820190508181036000830152611191818461113e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111c98261119e565b9050919050565b6111d9816111be565b81146111e457600080fd5b50565b6000813590506111f6816111d0565b92915050565b6000819050919050565b61120f816111fc565b811461121a57600080fd5b50565b60008135905061122c81611206565b92915050565b6000806040838503121561124957611248611199565b5b6000611257858286016111e7565b92505060206112688582860161121d565b9150509250929050565b60008115159050919050565b61128781611272565b82525050565b60006020820190506112a2600083018461127e565b92915050565b6112b1816111fc565b82525050565b60006020820190506112cc60008301846112a8565b92915050565b6000806000606084860312156112eb576112ea611199565b5b60006112f9868287016111e7565b935050602061130a868287016111e7565b925050604061131b8682870161121d565b9150509250925092565b600060ff82169050919050565b61133b81611325565b82525050565b60006020820190506113566000830184611332565b92915050565b60006020828403121561137257611371611199565b5b6000611380848285016111e7565b91505092915050565b611392816111be565b82525050565b60006020820190506113ad6000830184611389565b92915050565b600080604083850312156113ca576113c9611199565b5b60006113d8858286016111e7565b92505060206113e9858286016111e7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061143a57607f821691505b6020821081141561144e5761144d6113f3565b5b50919050565b7f4e6f7420612076616c6964206164647265737300000000000000000000000000600082015250565b600061148a6013836110e9565b915061149582611454565b602082019050919050565b600060208201905081810360008301526114b98161147d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114fa826111fc565b9150611505836111fc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561153a576115396114c0565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061157b6020836110e9565b915061158682611545565b602082019050919050565b600060208201905081810360008301526115aa8161156e565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061160d6025836110e9565b9150611618826115b1565b604082019050919050565b6000602082019050818103600083015261163c81611600565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061169f6026836110e9565b91506116aa82611643565b604082019050919050565b600060208201905081810360008301526116ce81611692565b9050919050565b60006116e0826111fc565b91506116eb836111fc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611724576117236114c0565b5b828202905092915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061178b6024836110e9565b91506117968261172f565b604082019050919050565b600060208201905081810360008301526117ba8161177e565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061181d6022836110e9565b9150611828826117c1565b604082019050919050565b6000602082019050818103600083015261184c81611810565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611889601d836110e9565b915061189482611853565b602082019050919050565b600060208201905081810360008301526118b88161187c565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061191b6025836110e9565b9150611926826118bf565b604082019050919050565b6000602082019050818103600083015261194a8161190e565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006119ad6023836110e9565b91506119b882611951565b604082019050919050565b600060208201905081810360008301526119dc816119a0565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611a3f6026836110e9565b9150611a4a826119e3565b604082019050919050565b60006020820190508181036000830152611a6e81611a32565b905091905056fea26469706673582212203580a56d305bb6acfc0c26bceaaf3909afd4200e47caae3e78a3708bfb6040b164736f6c634300080a0033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c8063715018a61461004f5780638da5cb5b14610066578063d857d23914610091578063e75cb9ae146100bc578063f2fde38b146100ec575b600080fd5b34801561005b57600080fd5b50610064610115565b005b34801561007257600080fd5b5061007b61019d565b6040516100889190610519565b60405180910390f35b34801561009d57600080fd5b506100a66101c6565b6040516100b39190610593565b60405180910390f35b6100d660048036038101906100d191906105e9565b6101ec565b6040516100e39190610631565b60405180910390f35b3480156100f857600080fd5b50610113600480360381019061010e9190610678565b610314565b005b61011d61040c565b73ffffffffffffffffffffffffffffffffffffffff1661013b61019d565b73ffffffffffffffffffffffffffffffffffffffff1614610191576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018890610702565b60405180910390fd5b61019b6000610414565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006101f661040c565b73ffffffffffffffffffffffffffffffffffffffff1661021461019d565b73ffffffffffffffffffffffffffffffffffffffff161461026a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026190610702565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d7cce633846040518363ffffffff1660e01b81526004016102c7929190610731565b6020604051808303816000875af11580156102e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030a919061076f565b5060019050919050565b61031c61040c565b73ffffffffffffffffffffffffffffffffffffffff1661033a61019d565b73ffffffffffffffffffffffffffffffffffffffff1614610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790610702565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f79061080e565b60405180910390fd5b61040981610414565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610503826104d8565b9050919050565b610513816104f8565b82525050565b600060208201905061052e600083018461050a565b92915050565b6000819050919050565b600061055961055461054f846104d8565b610534565b6104d8565b9050919050565b600061056b8261053e565b9050919050565b600061057d82610560565b9050919050565b61058d81610572565b82525050565b60006020820190506105a86000830184610584565b92915050565b600080fd5b6000819050919050565b6105c6816105b3565b81146105d157600080fd5b50565b6000813590506105e3816105bd565b92915050565b6000602082840312156105ff576105fe6105ae565b5b600061060d848285016105d4565b91505092915050565b60008115159050919050565b61062b81610616565b82525050565b60006020820190506106466000830184610622565b92915050565b610655816104f8565b811461066057600080fd5b50565b6000813590506106728161064c565b92915050565b60006020828403121561068e5761068d6105ae565b5b600061069c84828501610663565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006106ec6020836106a5565b91506106f7826106b6565b602082019050919050565b6000602082019050818103600083015261071b816106df565b9050919050565b61072b816105b3565b82525050565b6000604082019050610746600083018561050a565b6107536020830184610722565b9392505050565b600081519050610769816105bd565b92915050565b600060208284031215610785576107846105ae565b5b60006107938482850161075a565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006107f86026836106a5565b91506108038261079c565b604082019050919050565b60006020820190508181036000830152610827816107eb565b905091905056fea2646970667358221220ed027205cfb78fada5c78b43c26ce7d4756575f566616d89b5441ef9ba4b4a7864736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:861:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "68:32:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "78:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "89:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "78:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_100000000_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "50:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "60:7:12",
                "type": ""
              }
            ],
            "src": "7:93:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "151:32:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "161:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "172:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "161:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "133:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "143:7:12",
                "type": ""
              }
            ],
            "src": "106:77:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "221:28:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "231:12:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "238:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "207:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "217:3:12",
                "type": ""
              }
            ],
            "src": "189:60:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "331:98:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "341:82:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "415:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_100000000_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "381:33:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "381:40:12"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "372:8:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "372:50:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "354:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "354:69:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "341:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_100000000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "311:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "321:9:12",
                "type": ""
              }
            ],
            "src": "255:174:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "516:82:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "533:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "585:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_100000000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "538:46:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "538:53:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "526:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:66:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "526:66:12"
                }
              ]
            },
            "name": "abi_encode_t_rational_100000000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "504:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "511:3:12",
                "type": ""
              }
            ],
            "src": "435:163:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "718:140:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "728:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "740:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "751:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "736:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "736:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "728:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "824:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "837:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "848:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "833:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "833:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_100000000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "764:59:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "764:87:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "764:87:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_100000000_by_1__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "690:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "702:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "713:4:12",
                "type": ""
              }
            ],
            "src": "604:254:12"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_rational_100000000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_100000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_100000000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_100000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_100000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_100000000_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_100000000_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6727:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:12",
                "type": ""
              }
            ],
            "src": "7:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:12",
                "type": ""
              }
            ],
            "src": "139:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:12"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:12",
                "type": ""
              }
            ],
            "src": "241:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:12",
                "type": ""
              }
            ],
            "src": "365:222:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "625:28:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "635:12:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "642:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "635:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "611:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "621:3:12",
                "type": ""
              }
            ],
            "src": "593:60:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "719:82:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "729:66:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "787:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "769:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "769:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "760:8:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "760:34:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "742:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "742:53:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "729:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "699:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "709:9:12",
                "type": ""
              }
            ],
            "src": "659:142:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "867:66:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "877:50:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "921:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "890:30:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "890:37:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "877:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "847:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "857:9:12",
                "type": ""
              }
            ],
            "src": "807:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1016:66:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1026:50:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1070:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1039:30:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1039:37:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1026:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_RakToken_$2553_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "996:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1006:9:12",
                "type": ""
              }
            ],
            "src": "939:143:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1170:83:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1187:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1240:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_RakToken_$2553_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1192:47:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1192:54:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1180:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1180:67:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1180:67:12"
                }
              ]
            },
            "name": "abi_encode_t_contract$_RakToken_$2553_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1158:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1165:3:12",
                "type": ""
              }
            ],
            "src": "1088:165:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1374:141:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1384:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1396:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1407:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1392:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1392:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1384:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1481:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1494:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1505:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1490:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1490:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_RakToken_$2553_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1420:60:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1420:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1420:88:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_RakToken_$2553__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1346:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1358:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1369:4:12",
                "type": ""
              }
            ],
            "src": "1259:256:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1561:35:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1571:19:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1587:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1581:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1581:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1571:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1554:6:12",
                "type": ""
              }
            ],
            "src": "1521:75:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1691:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1708:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1711:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1701:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1701:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1701:12:12"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1602:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1814:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1831:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1834:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1824:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1824:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1824:12:12"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1725:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1893:32:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1903:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1914:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1903:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1875:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1885:7:12",
                "type": ""
              }
            ],
            "src": "1848:77:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1974:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2031:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2040:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2043:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2033:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2033:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2033:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1997:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2022:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2004:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2004:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1994:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1994:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1987:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1987:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1984:63:12"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1967:5:12",
                "type": ""
              }
            ],
            "src": "1931:122:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2111:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2121:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2143:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2130:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2130:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2121:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2186:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2159:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2159:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2159:33:12"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2089:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2097:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2105:5:12",
                "type": ""
              }
            ],
            "src": "2059:139:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2270:263:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2316:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2318:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2318:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2318:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2291:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2300:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2287:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2287:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2312:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2283:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2283:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2280:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2409:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2424:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2438:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2428:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2453:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2488:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2499:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2484:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2484:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2508:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2463:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2463:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2453:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2240:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2251:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2263:6:12",
                "type": ""
              }
            ],
            "src": "2204:329:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2581:48:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2591:32:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2616:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2609:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2609:13:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2602:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2602:21:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2591:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2563:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2573:7:12",
                "type": ""
              }
            ],
            "src": "2539:90:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2694:50:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2711:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2731:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2716:14:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2716:21:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2704:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2704:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2704:34:12"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2682:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2689:3:12",
                "type": ""
              }
            ],
            "src": "2635:109:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2842:118:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2852:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2864:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2875:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2860:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2860:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2852:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2926:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2939:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2950:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2935:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2935:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2888:37:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2888:65:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2888:65:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2814:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2826:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2837:4:12",
                "type": ""
              }
            ],
            "src": "2750:210:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3009:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3066:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3075:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3078:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3068:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3068:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3068:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3032:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3057:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3039:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3039:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3029:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3029:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3022:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3022:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3019:63:12"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3002:5:12",
                "type": ""
              }
            ],
            "src": "2966:122:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3146:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3156:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3178:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3165:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3165:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3156:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3221:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3194:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3194:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3194:33:12"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3124:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3132:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3140:5:12",
                "type": ""
              }
            ],
            "src": "3094:139:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3305:263:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3351:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3353:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3353:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3353:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3326:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3335:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3322:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3322:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3347:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3318:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3318:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "3315:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3444:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3459:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3473:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3463:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3488:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3523:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3534:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3519:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3519:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3543:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3498:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3498:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3488:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3275:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3286:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3298:6:12",
                "type": ""
              }
            ],
            "src": "3239:329:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3670:73:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3687:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3692:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3680:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3680:19:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3680:19:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3708:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3727:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3732:4:12",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3723:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3723:14:12"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3708:11:12"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3642:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3647:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3658:11:12",
                "type": ""
              }
            ],
            "src": "3574:169:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3855:76:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3877:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3885:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3873:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3873:14:12"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3889:34:12",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3866:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3866:58:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3866:58:12"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3847:6:12",
                "type": ""
              }
            ],
            "src": "3749:182:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4083:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4093:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4159:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4164:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4100:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4100:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4093:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4265:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "4176:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4176:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4176:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4278:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4289:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4294:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4285:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4285:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4278:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4071:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4079:3:12",
                "type": ""
              }
            ],
            "src": "3937:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4480:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4490:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4502:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4513:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4498:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4498:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4490:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4537:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4548:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4533:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4533:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4556:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4562:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4552:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4552:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4526:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4526:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4526:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4582:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4716:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4590:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4590:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4582:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4460:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4475:4:12",
                "type": ""
              }
            ],
            "src": "4309:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4799:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4816:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4839:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4821:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4821:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4809:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4809:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4809:37:12"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4787:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4794:3:12",
                "type": ""
              }
            ],
            "src": "4734:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4984:206:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4994:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5006:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5017:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5002:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5002:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4994:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5074:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5087:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5098:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5083:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5083:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5030:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5030:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5030:71:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5155:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5168:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5179:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5164:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5164:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5111:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5111:72:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5111:72:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4948:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4960:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4968:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4979:4:12",
                "type": ""
              }
            ],
            "src": "4858:332:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5259:80:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5269:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5284:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5278:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5278:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5269:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5327:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5300:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5300:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5300:33:12"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5237:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5245:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5253:5:12",
                "type": ""
              }
            ],
            "src": "5196:143:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5422:274:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5468:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5470:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5470:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5470:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5443:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5452:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5439:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5439:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5464:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5435:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5435:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "5432:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5561:128:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5576:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5590:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5580:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5605:74:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5651:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5662:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5647:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5647:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5671:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5615:31:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5615:64:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5605:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5392:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5403:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5415:6:12",
                "type": ""
              }
            ],
            "src": "5345:351:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5808:119:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5830:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5838:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5826:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5826:14:12"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5842:34:12",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5819:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5819:58:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5819:58:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5898:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5906:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5894:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5894:15:12"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5911:8:12",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5887:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5887:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5887:33:12"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5800:6:12",
                "type": ""
              }
            ],
            "src": "5702:225:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6079:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6089:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6155:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6160:2:12",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6096:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6096:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6089:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6261:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "6172:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6172:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6172:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6274:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6285:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6290:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6281:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6281:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6274:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6067:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6075:3:12",
                "type": ""
              }
            ],
            "src": "5933:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6476:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6486:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6498:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6509:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6494:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6494:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6486:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6533:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6544:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6529:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6529:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6552:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6558:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6548:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6548:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6522:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6522:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6522:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6578:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6712:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6586:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6586:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6578:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6456:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6471:4:12",
                "type": ""
              }
            ],
            "src": "6305:419:12"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_RakToken_$2553_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_RakToken_$2553_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_RakToken_$2553_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_RakToken_$2553__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_RakToken_$2553_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "201:495:4:-:0;;;340:9;327:23;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;300:50;;;;;;;;;;;;;;;;;;;;201:495;;;;;;;;;;921:32:6;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;201:495:4;;640:96:10;693:7;719:10;712:17;;640:96;:::o;2270:187:6:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;201:495:4:-;;;;;;;;:::o;7:93:12:-;60:7;89:5;78:16;;7:93;;;:::o;106:77::-;143:7;172:5;161:16;;106:77;;;:::o;189:60::-;217:3;238:5;231:12;;189:60;;;:::o;255:174::-;321:9;354:69;372:50;381:40;415:5;381:40;:::i;:::-;372:50;:::i;:::-;354:69;:::i;:::-;341:82;;255:174;;;:::o;435:163::-;538:53;585:5;538:53;:::i;:::-;533:3;526:66;435:163;;:::o;604:254::-;713:4;751:2;740:9;736:18;728:26;;764:87;848:1;837:9;833:17;824:6;764:87;:::i;:::-;604:254;;;;:::o;201:495:4:-;;;;;;;",
  "deployedSourceMap": "201:495:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:6;;;;;;;;;;;;;:::i;:::-;;1036:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;300:50:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;498:196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;300:50:4:-;;;;;;;;;;;;;:::o;498:196::-;601:12;1259::6;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;629:8:4::1;;;;;;;;;;;:17;;;647:10;659:6;629:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;683:4;676:11;;498:196:::0;;;:::o;1918:198:6:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;2270:187:6:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:126:12:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:60::-;621:3;642:5;635:12;;593:60;;;:::o;659:142::-;709:9;742:53;760:34;769:24;787:5;769:24;:::i;:::-;760:34;:::i;:::-;742:53;:::i;:::-;729:66;;659:142;;;:::o;807:126::-;857:9;890:37;921:5;890:37;:::i;:::-;877:50;;807:126;;;:::o;939:143::-;1006:9;1039:37;1070:5;1039:37;:::i;:::-;1026:50;;939:143;;;:::o;1088:165::-;1192:54;1240:5;1192:54;:::i;:::-;1187:3;1180:67;1088:165;;:::o;1259:256::-;1369:4;1407:2;1396:9;1392:18;1384:26;;1420:88;1505:1;1494:9;1490:17;1481:6;1420:88;:::i;:::-;1259:256;;;;:::o;1602:117::-;1711:1;1708;1701:12;1848:77;1885:7;1914:5;1903:16;;1848:77;;;:::o;1931:122::-;2004:24;2022:5;2004:24;:::i;:::-;1997:5;1994:35;1984:63;;2043:1;2040;2033:12;1984:63;1931:122;:::o;2059:139::-;2105:5;2143:6;2130:20;2121:29;;2159:33;2186:5;2159:33;:::i;:::-;2059:139;;;;:::o;2204:329::-;2263:6;2312:2;2300:9;2291:7;2287:23;2283:32;2280:119;;;2318:79;;:::i;:::-;2280:119;2438:1;2463:53;2508:7;2499:6;2488:9;2484:22;2463:53;:::i;:::-;2453:63;;2409:117;2204:329;;;;:::o;2539:90::-;2573:7;2616:5;2609:13;2602:21;2591:32;;2539:90;;;:::o;2635:109::-;2716:21;2731:5;2716:21;:::i;:::-;2711:3;2704:34;2635:109;;:::o;2750:210::-;2837:4;2875:2;2864:9;2860:18;2852:26;;2888:65;2950:1;2939:9;2935:17;2926:6;2888:65;:::i;:::-;2750:210;;;;:::o;2966:122::-;3039:24;3057:5;3039:24;:::i;:::-;3032:5;3029:35;3019:63;;3078:1;3075;3068:12;3019:63;2966:122;:::o;3094:139::-;3140:5;3178:6;3165:20;3156:29;;3194:33;3221:5;3194:33;:::i;:::-;3094:139;;;;:::o;3239:329::-;3298:6;3347:2;3335:9;3326:7;3322:23;3318:32;3315:119;;;3353:79;;:::i;:::-;3315:119;3473:1;3498:53;3543:7;3534:6;3523:9;3519:22;3498:53;:::i;:::-;3488:63;;3444:117;3239:329;;;;:::o;3574:169::-;3658:11;3692:6;3687:3;3680:19;3732:4;3727:3;3723:14;3708:29;;3574:169;;;;:::o;3749:182::-;3889:34;3885:1;3877:6;3873:14;3866:58;3749:182;:::o;3937:366::-;4079:3;4100:67;4164:2;4159:3;4100:67;:::i;:::-;4093:74;;4176:93;4265:3;4176:93;:::i;:::-;4294:2;4289:3;4285:12;4278:19;;3937:366;;;:::o;4309:419::-;4475:4;4513:2;4502:9;4498:18;4490:26;;4562:9;4556:4;4552:20;4548:1;4537:9;4533:17;4526:47;4590:131;4716:4;4590:131;:::i;:::-;4582:139;;4309:419;;;:::o;4734:118::-;4821:24;4839:5;4821:24;:::i;:::-;4816:3;4809:37;4734:118;;:::o;4858:332::-;4979:4;5017:2;5006:9;5002:18;4994:26;;5030:71;5098:1;5087:9;5083:17;5074:6;5030:71;:::i;:::-;5111:72;5179:2;5168:9;5164:18;5155:6;5111:72;:::i;:::-;4858:332;;;;;:::o;5196:143::-;5253:5;5284:6;5278:13;5269:22;;5300:33;5327:5;5300:33;:::i;:::-;5196:143;;;;:::o;5345:351::-;5415:6;5464:2;5452:9;5443:7;5439:23;5435:32;5432:119;;;5470:79;;:::i;:::-;5432:119;5590:1;5615:64;5671:7;5662:6;5651:9;5647:22;5615:64;:::i;:::-;5605:74;;5561:128;5345:351;;;;:::o;5702:225::-;5842:34;5838:1;5830:6;5826:14;5819:58;5911:8;5906:2;5898:6;5894:15;5887:33;5702:225;:::o;5933:366::-;6075:3;6096:67;6160:2;6155:3;6096:67;:::i;:::-;6089:74;;6172:93;6261:3;6172:93;:::i;:::-;6290:2;6285:3;6281:12;6274:19;;5933:366;;;:::o;6305:419::-;6471:4;6509:2;6498:9;6494:18;6486:26;;6558:9;6552:4;6548:20;6544:1;6533:9;6529:17;6522:47;6586:131;6712:4;6586:131;:::i;:::-;6578:139;;6305:419;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./RakToken.sol\";\n\n//This contract deploys Rak token  contract\ncontract RakTokenFactory is Ownable {\n    //this variable stores the RakToken contract address\n    RakToken public rakToken = new RakToken(100000000);\n\n    /**\n     * @notice user can get Rak token\n     * @param amount number of token user wants\n     * @return success true if success\n     */\n    function buyRaktoken(uint256 amount)\n        public\n        payable\n        onlyOwner\n        returns (bool success)\n    {\n        rakToken.getToken(msg.sender, amount);\n        return true;\n    }\n}\n",
  "sourcePath": "/home/sunny/Projects/lendnborrow/lendandborrow/contracts/RakTokenFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/RakTokenFactory.sol",
    "exportedSymbols": {
      "Context": [
        3453
      ],
      "ERC20": [
        3328
      ],
      "IERC20": [
        3406
      ],
      "IERC20Metadata": [
        3431
      ],
      "Ownable": [
        2740
      ],
      "RakToken": [
        2553
      ],
      "RakTokenFactory": [
        2589
      ],
      "SafeMath": [
        3765
      ]
    },
    "id": 2590,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2555,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:4"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 2556,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2590,
        "sourceUnit": 2741,
        "src": "61:68:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RakToken.sol",
        "file": "./RakToken.sol",
        "id": 2557,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2590,
        "sourceUnit": 2554,
        "src": "131:24:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2558,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2740,
              "src": "229:7:4"
            },
            "id": 2559,
            "nodeType": "InheritanceSpecifier",
            "src": "229:7:4"
          }
        ],
        "canonicalName": "RakTokenFactory",
        "contractDependencies": [
          2553
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2589,
        "linearizedBaseContracts": [
          2589,
          2740,
          3453
        ],
        "name": "RakTokenFactory",
        "nameLocation": "210:15:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d857d239",
            "id": 2567,
            "mutability": "mutable",
            "name": "rakToken",
            "nameLocation": "316:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 2589,
            "src": "300:50:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RakToken_$2553",
              "typeString": "contract RakToken"
            },
            "typeName": {
              "id": 2561,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2560,
                "name": "RakToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2553,
                "src": "300:8:4"
              },
              "referencedDeclaration": 2553,
              "src": "300:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RakToken_$2553",
                "typeString": "contract RakToken"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "313030303030303030",
                  "id": 2565,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "340:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100000000_by_1",
                    "typeString": "int_const 100000000"
                  },
                  "value": "100000000"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_100000000_by_1",
                    "typeString": "int_const 100000000"
                  }
                ],
                "id": 2564,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "327:12:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_RakToken_$2553_$",
                  "typeString": "function (uint256) returns (contract RakToken)"
                },
                "typeName": {
                  "id": 2563,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 2562,
                    "name": "RakToken",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2553,
                    "src": "331:8:4"
                  },
                  "referencedDeclaration": 2553,
                  "src": "331:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RakToken_$2553",
                    "typeString": "contract RakToken"
                  }
                }
              },
              "id": 2566,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "327:23:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RakToken_$2553",
                "typeString": "contract RakToken"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2587,
              "nodeType": "Block",
              "src": "619:75:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2580,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "647:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "647:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2582,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2570,
                        "src": "659:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2577,
                        "name": "rakToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2567,
                        "src": "629:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RakToken_$2553",
                          "typeString": "contract RakToken"
                        }
                      },
                      "id": 2579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2552,
                      "src": "629:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 2583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "629:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2584,
                  "nodeType": "ExpressionStatement",
                  "src": "629:37:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "683:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2576,
                  "id": 2586,
                  "nodeType": "Return",
                  "src": "676:11:4"
                }
              ]
            },
            "documentation": {
              "id": 2568,
              "nodeType": "StructuredDocumentation",
              "src": "357:136:4",
              "text": " @notice user can get Rak token\n @param amount number of token user wants\n @return success true if success"
            },
            "functionSelector": "e75cb9ae",
            "id": 2588,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2573,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2572,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2682,
                  "src": "574:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "574:9:4"
              }
            ],
            "name": "buyRaktoken",
            "nameLocation": "507:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2570,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "527:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2588,
                  "src": "519:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "518:16:4"
            },
            "returnParameters": {
              "id": 2576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2575,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "606:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2588,
                  "src": "601:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2574,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "600:14:4"
            },
            "scope": 2589,
            "src": "498:196:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2590,
        "src": "201:495:4",
        "usedErrors": []
      }
    ],
    "src": "36:661:4"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/RakTokenFactory.sol",
    "exportedSymbols": {
      "Context": [
        3453
      ],
      "ERC20": [
        3328
      ],
      "IERC20": [
        3406
      ],
      "IERC20Metadata": [
        3431
      ],
      "Ownable": [
        2740
      ],
      "RakToken": [
        2553
      ],
      "RakTokenFactory": [
        2589
      ],
      "SafeMath": [
        3765
      ]
    },
    "id": 2590,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2555,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:4"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 2556,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2590,
        "sourceUnit": 2741,
        "src": "61:68:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/RakToken.sol",
        "file": "./RakToken.sol",
        "id": 2557,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2590,
        "sourceUnit": 2554,
        "src": "131:24:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2558,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2740,
              "src": "229:7:4"
            },
            "id": 2559,
            "nodeType": "InheritanceSpecifier",
            "src": "229:7:4"
          }
        ],
        "canonicalName": "RakTokenFactory",
        "contractDependencies": [
          2553
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2589,
        "linearizedBaseContracts": [
          2589,
          2740,
          3453
        ],
        "name": "RakTokenFactory",
        "nameLocation": "210:15:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d857d239",
            "id": 2567,
            "mutability": "mutable",
            "name": "rakToken",
            "nameLocation": "316:8:4",
            "nodeType": "VariableDeclaration",
            "scope": 2589,
            "src": "300:50:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RakToken_$2553",
              "typeString": "contract RakToken"
            },
            "typeName": {
              "id": 2561,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2560,
                "name": "RakToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2553,
                "src": "300:8:4"
              },
              "referencedDeclaration": 2553,
              "src": "300:8:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RakToken_$2553",
                "typeString": "contract RakToken"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "313030303030303030",
                  "id": 2565,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "340:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100000000_by_1",
                    "typeString": "int_const 100000000"
                  },
                  "value": "100000000"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_100000000_by_1",
                    "typeString": "int_const 100000000"
                  }
                ],
                "id": 2564,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "327:12:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_RakToken_$2553_$",
                  "typeString": "function (uint256) returns (contract RakToken)"
                },
                "typeName": {
                  "id": 2563,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 2562,
                    "name": "RakToken",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2553,
                    "src": "331:8:4"
                  },
                  "referencedDeclaration": 2553,
                  "src": "331:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RakToken_$2553",
                    "typeString": "contract RakToken"
                  }
                }
              },
              "id": 2566,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "327:23:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RakToken_$2553",
                "typeString": "contract RakToken"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2587,
              "nodeType": "Block",
              "src": "619:75:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2580,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "647:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "647:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2582,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2570,
                        "src": "659:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2577,
                        "name": "rakToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2567,
                        "src": "629:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RakToken_$2553",
                          "typeString": "contract RakToken"
                        }
                      },
                      "id": 2579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2552,
                      "src": "629:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 2583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "629:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2584,
                  "nodeType": "ExpressionStatement",
                  "src": "629:37:4"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "683:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2576,
                  "id": 2586,
                  "nodeType": "Return",
                  "src": "676:11:4"
                }
              ]
            },
            "documentation": {
              "id": 2568,
              "nodeType": "StructuredDocumentation",
              "src": "357:136:4",
              "text": " @notice user can get Rak token\n @param amount number of token user wants\n @return success true if success"
            },
            "functionSelector": "e75cb9ae",
            "id": 2588,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2573,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2572,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2682,
                  "src": "574:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "574:9:4"
              }
            ],
            "name": "buyRaktoken",
            "nameLocation": "507:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2570,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "527:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2588,
                  "src": "519:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "518:16:4"
            },
            "returnParameters": {
              "id": 2576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2575,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "606:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2588,
                  "src": "601:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2574,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "600:14:4"
            },
            "scope": 2589,
            "src": "498:196:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2590,
        "src": "201:495:4",
        "usedErrors": []
      }
    ],
    "src": "36:661:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-03-11T05:23:17.589Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buyRaktoken(uint256)": {
        "params": {
          "amount": "number of token user wants"
        },
        "returns": {
          "success": "true if success"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "buyRaktoken(uint256)": {
        "notice": "user can get Rak token"
      }
    },
    "version": 1
  }
}